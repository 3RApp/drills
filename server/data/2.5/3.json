{
  "title": "Поиск узлов в дереве DOM",
  "goals": [
    "Развитие навыков поиска и идентификации элементов в документе DOM.",
    "Освоение основных методов поиска элементов, предоставляемых JavaScript API."
  ],
  "training_topic": "Методы поиска элементов в DOM, их применение и сравнение результатов.",
  "required_resources": [
    "Современные браузеры (Google Chrome, Mozilla Firefox, Safari и т.д.).",
    "HTML-файл `index.html`, (предоставляется в дополнительных материалах)."
  ],
  "instructions": [
    "Вступительная рекомендация:",
    "- Рекомендуется после выполнения каждой команды, приводящей к выводу результатов поиска в консоли, проверить эти результаты во вкладке «Элементы», чтобы убедиться в точности нахождения искомых элементов и их количества, если метод возвращает коллекцию.",
    "",
    "Шаг 1. Начальные условия:",
    "- Откройте файл `index.html`, расположенный в папке упражнения, в браузере.",
    "",
    "Шаг 2. Начало работы с поиском элементов:",
    "- Откройте инструменты разработчика (F12 или Ctrl+Shift+I) и переключитесь на вкладку «Консоль».",
    "",
    "Шаг 3. Применение методов поиска элементов:",
    "- Введите в консоли следующую команду и нажмите Enter:",
    {
      "type": "code",
      "title": "Поиск первого элемента h1 на странице",
      "code": "document.querySelector('h1');"
    },
    "",
    "- Затем введите следующую команду и нажмите Enter:",
    {
      "type": "code",
      "title": "Поиск всех элементов li с классом price",
      "code": "document.querySelectorAll('li.price');"
    },
    "",
    "- Далее попробуйте найти элемент по ID:",
    {
      "type": "code",
      "title": "Поиск элемента по ID phone",
      "code": "document.getElementById('phone');"
    },
    "",
    "- Примените поиск элементов по классу:",
    {
      "type": "code",
      "title": "Поиск всех элементов с классом price",
      "code": "document.getElementsByClassName('price');"
    },
    "",
    "- Осуществите поиск элементов по имени атрибута name:",
    {
      "type": "code",
      "title": "Поиск элементов с атрибутом any-text",
      "code": "document.getElementsByName('any-text');"
    },
    "",
    "- Наконец, найдите все элементы по тегу:",
    {
      "type": "code",
      "title": "Поиск всех элементов li",
      "code": "document.getElementsByTagName('li');"
    },
    "",
    "Шаг 4. Анализ и сравнение результатов:",
    "- Сопоставьте результаты и выявите отличия и сходства между полученными коллекциями элементов в пунктах 3–8.",
    "",
    "Шаг 5. Заключение и дополнительное задание:",
    "- Постарайтесь объяснить причины разницы в поведении методов поиска элементов.",
    "- Перейдите к таблице 2.1 учебника и ознакомьтесь с реализацией методов поиска элементов в разных интерфейсах.",
    "- Выделите элемент `body` и примените к нему методы `getElementById` и `getElementsByName`, оценивая получаемые результаты."
  ],
  "reflection_questions": [
    "В чём принципиальное различие между методами `querySelector` и `getElementById`?",
    "Почему методы `getElementsBy*` возвращают коллекцию, а не одиночные элементы?",
    "Что значит термин «живая коллекция» в контексте JavaScript?"
  ],
  "additional_materials": [
    {
        "type": "link",
        "title": "HTML-файл для выполнения упражнения",
        "name": "1",
        "folder": "3",
        "chapter": "2.5"
    },
    "MDN Documentation on Query Selector Methods: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector",
    "W3Schools Guide on DOM Search Methods: https://www.w3schools.com/jsref/dom_obj_document.asp"
  ],
  "final_conclusion": [
    "Вы освоили основные методы поиска элементов в DOM и научились отличать их результаты.",
    "Поняли разницу между одиночными элементами и коллекциями, получаемыми методами поиска.",
    "Готовьтесь к следующему этапу освоения работы с DOM!"
  ]
}