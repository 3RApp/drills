{
  "title": "Сравнение живого и статического NodeList",
  "goals": [
    "Понять различие между живыми и статическими коллекциями элементов DOM.",
    "Практическое применение методов работы с коллекциями NodeList и HTMLCollection."
  ],
  "training_topic": "Особенности работы с коллекциями элементов DOM в JavaScript.",
  "required_resources": [
    "Любой современный браузер (Google Chrome, Mozilla Firefox, Safari и т.д.).",
    "HTML-файл `index.html`, (предоставляется в дополнительных материалах)."
  ],
  "instructions": [
    "Введение в упражнение:",
    "- Цель данного упражнения — научиться различать «живые» и «статические» коллекции элементов DOM и понимать их поведение при изменениях структуры страницы.",
    "",
    "Шаг 1. Подготовка рабочей среды:",
    "- Откройте файл `index.html`, расположенный в папке упражнения, в браузере.",
    "",
    "Шаг 2. Исследование поведения статического NodeList:",
    "- Откройте инструменты разработчика (F12 или Ctrl+Shift+I) и перейдите на вкладку «Консоль».",
    "- Введите в консоли следующий фрагмент кода и нажмите Enter:",
    {
      "type": "code",
      "title": "Создание статического NodeList и попытка модификации",
      "code": "const nodeList = document.querySelectorAll('input[type='radio']'); for (let i = 0; i < nodeList.length; i++){ if (i === 1){ const clone = nodeList[i].cloneNode(); nodeList[i].parentNode.appendChild(clone); } console.log(nodeList); } console.log('после цикла: ', nodeList);"
    },
    "",
    "Шаг 3. Исследование поведения живого NodeList:",
    "- Выполните аналогичный цикл, но на этот раз с использованием другого метода получения элементов:",
    {
      "type": "code",
      "title": "Создание живого NodeList и модификация структуры",
      "code": "const nodeList = document.getElementsByName('color'); for (let i = 0; i < nodeList.length; i++){ if (i === 1){ const clone = nodeList[i].cloneNode(); nodeList[i].parentNode.appendChild(clone); } console.log(nodeList); } console.log('после цикла: ', nodeList);"
    },
    "",
    "Шаг 4. Анализ результатов и выводы:",
    "- Посмотрите на вывод в консоли и отметьте, как изменилось состояние NodeList в каждом цикле.",
    "- Зафиксируйте разницу между поведением статического и живого NodeList при внесении изменений в структуру страницы.",
    "",
    "Заключение:",
    "- Подытожьте своё наблюдение и сделайте вывод о том, что представляет собой «живой» и «статический» NodeList."
  ],
  "reflection_questions": [
    "В чём главное различие между живым и статическим NodeList?",
    "Какие методы создают статические списки, а какие — живые?",
    "Какие последствия возникают при изменении структуры страницы при использовании живых коллекций?"
  ],
  "additional_materials": [
    {
        "type": "link",
        "title": "HTML-файл для выполнения упражнения",
        "name": "1",
        "folder": "4",
        "chapter": "2.5"
    },
    "Документация MDN по методу querySelectorAll(): https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelectorAll",
    "Документация MDN по методу getElementsByName(): https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementsByName"
  ],
  "final_conclusion": [
    "Вы усвоили концепцию «живых» и «статических» коллекций DOM и понимаете их влияние на производительность и логику работы скриптов.",
    "Ваш уровень владения средствами манипуляции DOM значительно вырос благодаря практике сравнения поведения разных способов сбора элементов."
  ]
}