{
  "title": "Удаление узла из дерева DOM",
  "goals": [
    "Практическое освоение удаления элементов из DOM.",
    "Закрепление понимания механизма работы метода removeChild()."
  ],
  "training_topic": "Работа с DOM, удаление элементов и управление ссылками между узлами.",
  "required_resources": [
    "Любой современный браузер (Google Chrome, Mozilla Firefox, Safari и т.д.).",
    "HTML-файл `index.html`, (предоставляется в дополнительных материалах)."
  ],
  "instructions": [
    "Введение в упражнение:",
    "- Помните, что метод removeChild() лишь разрывает связи между элементами DOM, не уничтожая сам элемент окончательно.",
    "",
    "Шаг 1. Подготовьте рабочую среду:",
    "- Откройте файл `index.html`, расположенный в папке упражнения, в браузере.",
    "",
    "Шаг 2. Начало работы с удалением элементов:",
    "- Откройте инструменты разработчика (F12 или Ctrl+Shift+I) и перейдите на вкладку «Консоль».",
    "",
    "Шаг 3. Удаление элемента из DOM:",
    "- Введите в консоли следующий фрагмент кода и нажмите Enter:",
    {
      "type": "code",
      "title": "Удаление последнего элемента из списка",
      "code": "const ul = document.querySelector('ul');\nconst by64rub = ul.lastElementChild;\nconst deleted = ul.removeChild(by64rub);"
    },
    "",
    "- Обратите внимание на произошедшие изменения на странице и в структуре DOM.",
    "",
    "Шаг 4. Возврат удалённого элемента обратно в DOM:",
    "- Введите в консоли следующий фрагмент кода и нажмите Enter:",
    {
      "type": "code",
      "title": "Возвращение удалённого элемента обратно в список",
      "code": "ul.appendChild(deleted);"
    },
    "",
    "Шаг 5. Анализ результатов и выводы:",
    "- Рассмотрите итоговое состояние страницы и проверьте, вернулся ли удалённый элемент на прежнюю позицию.",
    "",
    "Заключение:",
    "- Вы освоили механизм удаления элементов из DOM и убедились, что сами элементы сохраняются до тех пор, пока остаются ссылки на них."
  ],
  "reflection_questions": [
    "Что произойдет, если удалить элемент из DOM, но оставить ссылку на него в переменной?",
    "Как изменится ситуация, если повторно вставить удалённый элемент в другое место DOM?",
    "Какие методы DOM предоставляют аналогичные возможности удаления элементов?"
  ],
  "additional_materials": [
    {
    "type": "link",
    "title": "HTML-файл для выполнения упражнения",
    "name": "1",
    "folder": "9",
    "chapter": "2.5"
    }, 
    "Документация MDN по методу removeChild(): https://developer.mozilla.org/en-US/docs/Web/API/Node/removeChild",
    "Информация о механизме сборки мусора в JavaScript: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Memory_management"
  ],
  "final_conclusion": [
    "Вы освоили основы удаления элементов из DOM и научились управлять их состоянием, сохранившимися ссылками и влиянием на отображение страницы."
  ]
}