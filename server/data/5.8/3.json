{
  "title": "Использование метода map для вывода списка React-компонентов",
  "goals": [
    "Практическое освоение использования метода map для создания списка React-компонентов.",
    "Закрепление понимания важности свойства key при работе с динамическими списками."
  ],
  "training_topic": "Создание динамических списков в React с использованием метода map и свойства key.",
  "required_resources": [
    "Редактор кода (VS Code, Sublime Text и т.д.).",
    "React-проект (готовое приложение или созданный вручную)."
  ],
  "instructions": [
    "Введение в упражнение:",
    "- Цель упражнения — научиться использовать метод map для создания списка React-компонентов и понять важность свойства key для корректной работы динамических списков.",
    "",
    "Шаг 1. Подготовьте рабочую среду:",
    "- Откройте редактор кода и создайте или откройте существующую папку с React-проектом.",
    "",
    "Шаг 2. Создание списка элементов с использованием метода map без свойства key:",
    "- Откройте файл `App.js` и поместите в него следующий код компонента:",
    {
      "type": "code",
      "title": "Компонент App.js (без свойства key)",
      "code": "import React from 'react'; const App = () => { const items = ['Яблоко', 'Банан', 'Апельсин']; return ( <div> <h1>Список фруктов</h1> <ul> {items.map(item => <li>{item}</li>)} </ul> </div> ); }; export default App;"
    },
    "",
    "Шаг 3. Запуск и просмотр результата с предупреждением в консоли:",
    "- Запустите проект с помощью команды `npm start` или аналогичной.",
    "- Откройте браузер и убедитесь, что список фруктов отображается корректно.",
    "- Обратите внимание на предупреждения в консоли браузера, связанные с отсутствием свойства key.",
    "",
    "Шаг 4. Добавление свойства key в возвращаемый JSX из коллбэка метода map:",
    "- Обновите код компонента `App.js`, добавив свойство key в элемент `li`:",
    {
      "type": "code",
      "title": "Компонент App.js (с добавлением свойства key)",
      "code": "import React from 'react'; const App = () => { const items = ['Яблоко', 'Банан', 'Апельсин']; return ( <div> <h1>Список фруктов</h1> <ul> {items.map((item, index) => <li key={index}>{item}</li>)} </ul> </div> ); }; export default App;"
    },
    "",
    "Шаг 5. Запуск и проверка отсутствия предупреждений в консоли:",
    "- Перезапустите проект с помощью команды `npm start` или аналогичной.",
    "- Откройте браузер и убедитесь, что список фруктов отображается корректно и предупреждения в консоли отсутствуют.",
    "",
    "Заключение:",
    "- Вы освоили использование метода map для создания списка React-компонентов и поняли важность свойства key для корректной работы динамических списков."
  ],
  "reflection_questions": [
    "Почему свойство key важно при использовании метода map в React?",
    "Какие последствия могут возникнуть при отсутствии свойства key в динамических списках?",
    "Какие стратегии можно использовать для выбора уникальных ключей в динамических списках?"
  ],
  "additional_materials": [
    {
    "type": "link",
    "title": "Файлы для выполнения упражнения",
    "name": "1",
    "folder": "3",
    "chapter": "5.8"
    },    
    "Документация React: https://react.dev/learn/rendering-lists#keeping-list-items-in-order-with-key"
  ],
  "final_conclusion": [
    "Вы освоили использование метода map для создания списка React-компонентов и научились применять свойство key для корректной работы динамических списков."
  ]
}