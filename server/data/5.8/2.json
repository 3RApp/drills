{
  "title": "Использование свойства children и обработка событий в React",
  "goals": [
    "Практическое освоение использования свойства children для передачи вложенных компонентов с обработчиками событий.",
    "Закрепление навыков работы с JSX, обработчиками событий и контекстом компонентов."
  ],
  "training_topic": "Композиция компонентов с использованием свойства children и обработка событий в React.",
  "required_resources": [
    "Редактор кода (VS Code, Sublime Text и т.д.).",
    "React-проект (готовое приложение или созданный вручную)."
  ],
  "instructions": [
    "Введение в упражнение:",
    "- Цель упражнения — научиться использовать свойство children для передачи вложенных компонентов с обработчиками событий, а также понять контекст выполнения обработчиков в React.",
    "",
    "Шаг 1. Подготовьте рабочую среду:",
    "- Откройте редактор кода и создайте или откройте существующую папку с React-проектом.",
    "",
    "Шаг 2. Создание компонента Wrapper.js с обработкой события onClick:",
    "- Создайте файл `Wrapper.js` и поместите в него следующий код компонента:",
    {
      "type": "code",
      "title": "Компонент Wrapper.js",
      "code": "import React from 'react'; const Wrapper = ({ children, onClick }) => ( <div style={{ border: '1px solid black', padding: '10px' }}> {children} <button onClick={onClick}>Кнопка внутри Wrapper</button> </div> ); export default Wrapper;"
    },
    "",
    "Шаг 3. Использование компонента Wrapper в App.js с передачей вложенных компонентов и обработчиков событий:",
    "- Создайте файл `App.js` и поместите в него следующий код компонента:",
    {
      "type": "code",
      "title": "Компонент App.js",
      "code": "import React, { useState } from 'react'; import Wrapper from './Wrapper'; const App = () => { const [appCount, setAppCount] = useState(0); const [wrapperCount, setWrapperCount] = useState(0); const handleAppClick = () => { setAppCount(appCount + 1); }; const handleWrapperClick = () => { setWrapperCount(wrapperCount + 1); }; return ( <div> <h1>Использование свойства children и обработка событий</h1> <p>Счётчик App: {appCount}</p> <p>Счётчик Wrapper: {wrapperCount}</p> <Wrapper onClick={handleWrapperClick}> <button onClick={handleAppClick}>Кнопка внутри App</button> </Wrapper> </div> ); }; export default App;"
    },
    "",
    "Шаг 4. Изучение кода компонента:",
    "- В компоненте `Wrapper.js` добавлено свойство `onClick`, которое вызывается при нажатии на кнопку, расположенную внутри JSX компонента `Wrapper`.",
    "- В компоненте `App.js` объявлены две переменные состояния: `appCount` и `wrapperCount`, а также два обработчика событий: `handleAppClick` и `handleWrapperClick`.",
    "- Компонент `Wrapper` используется для оборачивания кнопки, которая имеет собственный обработчик события `onClick`, переданный через `children`.",
    "",
    "Шаг 5. Запуск и просмотр результата с дополнительными действиями:",
    "- Запустите проект с помощью команды `npm start` или аналогичной.",
    "- Откройте браузер и нажмите на кнопки «Кнопка внутри App» и «Кнопка внутри Wrapper». Наблюдайте, как изменяются значения счётчиков `appCount` и `wrapperCount`.",
    "",
    "Дополнительные действия для закрепления материала:",
    {
      "type": "enumeration",
      "items": [
        "Попробуйте изменить стиль компонента `Wrapper`, например, добавьте цвет фона или измените размер шрифта.",
        "Добавьте ещё один вложенный компонент внутрь `Wrapper`, например, изображение или список.",
        "Создайте ещё один компонент, аналогичный `Wrapper`, и используйте его для оборачивания других элементов."
      ]
    },
    "",
    "Заключение:",
    "- Вы освоили использование свойства children для передачи вложенных компонентов с обработчиками событий, а также поняли контекст выполнения обработчиков в React."
  ],
  "reflection_questions": [
    "Как свойство children помогает в композиции компонентов в React с обработчиками событий?",
    "Какие преимущества даёт использование свойства children перед передачей отдельных пропсов с обработчиками?",
    "Какие сценарии использования свойства children с обработчиками событий наиболее распространены в React-разработке?"
  ],
  "additional_materials": [
    {
    "type": "link",
    "title": "Файлы для выполнения упражнения",
    "name": "1",
    "folder": "2",
    "chapter": "5.8"
    },    
    "Документация React: https://react.dev/learn/passing-props-to-a-component#passing-jsx-as-children"
  ],
  "final_conclusion": [
    "Вы освоили использование свойства children в React с обработчиками событий, научились передавать вложенные компоненты и создавать более гибкие и переиспользуемые компоненты."
  ]
}