{
  "title": "Написание кода при помощи конструктора создания кода React-компонента",
  "goals": [
    "Практическое освоение создания кода React-компонента при помощи проверочного списка."
  ],
  "training_topic": "Конструктор создания кода React-компонента.",
  "required_resources": [
    "Проверочный список из книги \"Разработка фронтенд-приложений\" на страницах 412 - 425.",
    "Листинги кодов держите всегда под рукой. Нам нужно будет знакомиться с некоторыми из них. Коды листингов расположены здесь https://github.com/3RApp/code"
  ],
  "instructions": [
    "Введение в упражнение:",
    "- Цель упражнения — научиться пользоваться проверочным списком.",
    "",
    "- В книге \"Разработка фронтенд-приложений\" на страницах 412-413 прочитайте текст.",
    "- Откройте листинг кодов в разделе 8, папка internet-shop, откройте файл `src/pages/SubcategoryPage/SubcategoryPage.js` и пробегитесь не вдаваясь в подробности.",
    "- Этот компонент, как и все остальные в этом интернет-магазине, создан при помощи проверочного списка. Код выглядит упорядоченно. Сейчас мы потренируем свои навыки в этом.",
    "Шаг 1. Нахождение шага при помощи которого создан следующий код:",
    "- Начиная со страницы 414 прочитайте шаги этапа 1 (только наименования шагов, не нужно читать сами действия шага) и найдите тот, при помощи которого написан следующий код.",
    {
      "type": "code",
      "title": "Получение данных из стора Reduxtoolkit (строка 19 листинга)",
      "code": "const sortingType = useSelector(selectSortingType('subcategory'));"
    },
    "",
    "Шаг 2. Изучим детально шаг 2 этапа 1:",
    "- Ознакомьтесь с подробным описанием шага 2 этапа 1 на страницах 414 - 415 книги.",
    "- Откройте в листинге 8.9 - 8.10 компонент `src/App.js`.",
    "- Ознакомьтесь с одним из возможных примеров реализации описанных в шаге.",
    "",
    "Шаг 3. Пример статической структуры данных",
    "- Изучите шаг 8 этапа 1 на странице 416 книги.",
    "- Откройте листинг internet-shop в разделе 8, папка internet-shop, откройте файл `src/business/Price/Price.js`, посмотрите код и посмотрите статическую структуру данных, которую импортирует компонент.",
    "",
    "Шаг 4. Сравнение с состоянием компонента находящегося в процессе разработки но способного выводить в DOM элементы, а также пересмотренное решение:",
    "- Откройте в листинге 8.26-8.29 компонент расположенный в `src/pages/SubcategoryPage/SubcategoryPage.js`.",
    "- Сравните эти два компонента.",
    "- Решение претерпело изменение. Вместо RTK Query задействованы возможности ReactRouter.",
    "- Посмотрите на использование @TODO и сами ответьте себе на вопрос, помогает ли их применение. В любом случае, помогает ли вам использование @TODO сравнить окончательное решение и изначально задуманное? ",
    "- Применение @TODO при использовании проверочного списка помогает вам сразу записывать, что вы ожидаете видеть. Если вы не записываете с помощью @TODO то вам придётся делать лишнюю работу - заглядывать в граф компонентов!",
    "",
    "Шаг 5. Изучаем этап 3:",
    "- Ознакомьтесь с каждым шагом (не изучая сами действия, только названия шагов) этапа 3 на страницах 417 - 419 книги.",
    "- Вновь откройте в листинге 8.9 - 8.10 компонент `src/App.js`.",
    "- Посмотрите как реализован шаг 19 этапа 3.",
    "- Ответьте себе на вопрос: -\"Сколько раз применен шаг 19 этапа 3?\"",
    "- Теперь в разделе 8 папка internet-shop, откройте код компонента src/business/NameForm/NameForm.js.",
    "- Начиная с шага 12 (этапа 3) и до последнего, 19 шага (этапа 3) читайте наименование шага и смотрите код компонента NameForm. Если шаг мог бы быть применен в данном компоненте, то прочитайте действия, которые нужно выполнить для написания кода в данном шаге.",
    "",
    "Шаг 6. Изучаем этап 4:",
    "- На страницах 419 - 420 книги прочитайте вводный текст по этапу 4 (текст до шага 20).",
    "- Теперь для себя отметьте три момента, когда у компонента проявляется поведение.",
    "- Отметьте также для себя четыре места в коде, где вы можете обратиться к WebAPI.",
    "- Откройте код листинга 5.23 и укажите: 1) момент, когда начинает проявляться поведение и 2) место, где вы обращаетесь к WebAPI.",
    "- Изучите шаг 21 этапа 4 на страницах 421 - 422 книги.",
    "- После прочтения вновь посмотрите листинг 5.23.",
    "- Изучите теперь шаг 22 этапа 4 на странице 422 книги.",
    "- Откройте листинг 6.18 и посмотрите каким образом реализованы действия описанные в шаге 22.",
    "- Изучите шаг 25 этапа 4 и действия производимые в даннмо шаге на страницах 423 - 424 книги.",
    "- Откройте листинг 5.89-5.93 и найдите компоненты, которые реализуют действия данного шага.",
    "",
    "Шаг 7. Изучаем этап 5:",
    "- Прочтите название шага 26 этапа 5 на странице 424 книги и ответьте на вопрос, почему два схожих на первых взгляд шага, 25 этапа 4 и 26 этапа 5 находятся в разных этапах и в чём их принципиальное тличие?",
    "- Откройте листинг 5.89-5.93 в файле src/business/ComponentsFromDifferentSubtreesSecond.js посмотрите каким образом реализованы действия описанные в шаге 26.",
    "",
    "Заключение:",
    "- Мы выборочно прошли по некоторым шагам проверочного списка создания кода компонента. Надеюсь стало больше понятно, как им пользоваться.",
    "- Используйте проверочный список для создания кода компонента. По-началу будет непривычно, но впоследствии вы будете создавать код быстрее. А после некоторого времени вы и вовсе сможете писать по памяти.",
    "- Какой существует другой подход для написания кода компонента? Начинать писать код и описывать последовательно обработку каких-либо данных и создания на их основе выводов в JSX, а также создания эффектов.",
    "- Обратите внимание, что в списке есть шаг 2, который подразумевает, что вы осуществляете проектирование. И это единственный такой шаг.",
    "- Также обратите внимание, что этот список предназначен для 3RApp."
  ],
  "reflection_questions": [
    "Как использование проверочного списка помогает в создании кода React-компонента?",
    "Какие преимущества и недостатки использования проверочного списка по сравнению с привычным вам подходом к написанию кода?",
    "Как использование @TODO помогает в процессе разработки и как это связано с проверочным списком?",
    "Какие этапы проверочного списка наиболее важны для создания функционального и поддерживаемого кода?"
  ],
  "additional_materials": [
    "Книга: Разработка фронтенд-приложений, автор Кузьмин Антон Геннадьевич, Издательство: \"Питер\", ISBN: 978-5-4461-4272-9, глава 8 \"Разработка фронтенд-приложения\".",
    "Коды листингов к книге https://github.com/3RApp/code"
  ],
  "final_conclusion": [
    "Использование проверочного списка для создания кода React-компонента позволяет систематизировать процесс разработки, улучшить качество кода и ускорить его создание. Этот подход особенно полезен для начинающих разработчиков, так как помогает избежать распространенных ошибок и следовать лучшим практикам. По мере накопления опыта, вы сможете адаптировать проверочный список под свои нужды и использовать его как основу для создания собственных методик разработки."
  ]
}