{
  "title": "Создание кастомного хука с нуля",
  "goals": [
    "Практическое освоение создания кастомных хуков в React.",
    "Закрепление навыков работы с хуками и их API."
  ],
  "training_topic": "Создание кастомных хуков в React с нуля.",
  "required_resources": [
    "Редактор кода (VS Code, Sublime Text и т.д.).",
    "React-проект (готовое приложение или созданный вручную)."
  ],
  "instructions": [
    "Введение в упражнение:",
    "- Цель упражнения — научиться создавать кастомные хуки в React с нуля, следуя пошаговой инструкции.",
    "",
    "Шаг 1. Определить результат хука:",
    "- Определите, что должен делать ваш кастомный хук. Например, он может управлять состоянием счётчика.",
    "",
    "Шаг 2. Определить API, подходящий для результата, данные и структуры, хранящие эти данные, или UI, которые будут задействованы для реализации хука:",
    "- Определите, какие данные и структуры будут использоваться в хуке. Например, счётчик и функция для его увеличения.",
    "",
    "Шаг 3. Задать имя, начинающееся с use и использующее имя задействованных API, данных, структур или UI, UI-эффектов:",
    "- Назовите ваш хук, например, `useCounter`. Имя должно отражать его функциональность.",
    "",
    "Шаг 4. Определить возвращаемые значения и/или функции. Хук также может ничего не возвращать:",
    "- Определите, что ваш хук будет возвращать. Например, текущее значение счётчика и функцию для его увеличения.",
    "",
    "Шаг 5. Определить параметры хука, которые будут использованы в вычислениях в его теле:",
    "- Определите, какие параметры будут передаваться в хук. Например, начальное значение счётчика.",
    "",
    "Шаг 6. Написать реализацию хука:",
    "- Создайте файл `useCounter.js` и поместите в него следующий код реализации хука:",
    {
      "type": "code",
      "title": "Создание файла useCounter.js",
      "code": "import { useState } from 'react';"
    },
    "",
    {
      "type": "code",
      "title": "Определение функции useCounter",
      "code": "const useCounter = (initialValue = 0) => {"
    },
    "",
    {
      "type": "code",
      "title": "Создание состояния счётчика",
      "code": "const [count, setCount] = useState(initialValue);"
    },
    "",
    {
      "type": "code",
      "title": "Создание функции для увеличения счётчика",
      "code": "const increment = () => { setCount(count + 1); };"
    },
    "",
    {
      "type": "code",
      "title": "Возврат значений из хука",
      "code": "return { count, increment };"
    },
    "",
    {
      "type": "code",
      "title": "Закрывающая скобка функции и экспорт хука",
      "code": "}; export default useCounter;"
    },
    "",
    "Шаг 7. Использование кастомного хука в компоненте App.js:",
    "- Создайте файл `App.js` и поместите в него следующий код компонента, который использует кастомный хук `useCounter`:",
    {
      "type": "code",
      "title": "Компонент App.js (с использованием кастомного хука useCounter)",
      "code": "import React from 'react'; import useCounter from './useCounter'; const App = () => { const { count, increment } = useCounter(0); return ( <div> <h1>Использование кастомного хука useCounter</h1> <p>Текущее значение счётчика: {count}</p> <button onClick={increment}>Увеличить счётчик</button> </div> ); }; export default App;"
    },
    "",
    "Шаг 8. Запуск и просмотр результата:",
    "- Запустите проект с помощью команды `npm start` или аналогичной.",
    "- Откройте браузер и нажмите на кнопку «Увеличить счётчик». Наблюдайте, как значение счётчика увеличивается при каждом нажатии.",
    "",
    "Заключение:",
    "- Вы освоили создание кастомного хука с нуля и научились использовать его в React-компонентах."
  ],
  "reflection_questions": [
    "Какие задачи можно решать с помощью кастомных хуков в React?",
    "Как организовать API кастомного хука для удобства использования?",
    "Какие преимущества дают кастомные хуки перед использованием встроенных хуков напрямую?"
  ],
  "additional_materials": [
    {
    "type": "link",
    "title": "Файлы для выполнения упражнения",
    "name": "1",
    "folder": "1",
    "chapter": "5.17"
    },     
    "Документация React: https://react.dev/reference/react/useState"
  ],
  "final_conclusion": [
    "Вы освоили создание кастомных хуков в React, научились проектировать их API и использовать в компонентах."
  ]
}