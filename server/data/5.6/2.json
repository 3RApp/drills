{
  "title": "Изучение работы хука useState в React",
  "goals": [
    "Практическое освоение особенностей работы хука useState в React.",
    "Закрепление навыков работы с состоянием и обработчиками событий."
  ],
  "training_topic": "Работа с состоянием в React-компоненте с помощью хука useState.",
  "required_resources": [
    "Редактор кода (VS Code, Sublime Text и т.д.).",
    "React-проект (готовое приложение или созданный вручную)."
  ],
  "instructions": [
    "Введение в упражнение:",
    "- Цель упражнения — изучить как React ведёт себя при установке старого значения состояния с помощью хука useState и подтвердить что в таком случае перерендинг не происходит.",
    "",
    "Шаг 1. Подготовьте рабочую среду:",
    "- Откройте редактор кода и создайте или откройте существующую папку с React-проектом.",
    "",
    "Шаг 2. Создание компонента App.js с использованием хука useState:",
    "- Создайте файл `App.js` и поместите в него следующий код компонента:",
    {
      "type": "code",
      "title": "Компонент App.js",
      "code": "import React, { useState } from 'react'; const App = () => { const [state, setState] = useState(0); const handleClick = () => { setState(state); }; alert(`Переменная состояния равна ${state}`); return ( <div> <h1>Тестируем работу хука useState</h1> <button onClick={handleClick}>Нажми меня</button> </div> ); }; export default App;"
    },
    "",
    "Шаг 3. Изучение кода компонента:",
    "- В компоненте `App.js` объявлена переменная состояния `state` с помощью хука `useState` и установлено её начальное значение равное нулю.",
    "- Функция `handleClick` пытается установить существующее значение состояния вызывая функцию `setState(state)`.",
    "- В обработчике события `onClick` назначена функция `handleClick` которая вызывает алерт с текущим значением состояния.",
    "",
    "Шаг 4. Запуск и просмотр результата:",
    "- Запустите проект с помощью команды `npm start` или аналогичной.",
    "- Откройте браузер и несколько раз нажмите на кнопку «Нажми меня». Наблюдайте как значение состояния остаётся неизменным и не происходит перерендинг компонента.",
    "",
    "Заключение:",
    "- Вы изучили как React ведёт себя при установке предыдущего значения состояния с помощью хука useState подтвердив что в таком случае перерендинг не происходит."
  ],
  "reflection_questions": [
    "Почему React не проводит перерендинг при установке существующего значения состояния?",
    "Какие преимущества даёт подобное поведение хука useState?",
    "Какие случаи требуют обязательного обновления состояния в React-компонентах?"
  ],
  "additional_materials": [
    {
    "type": "link",
    "title": "Файлы для выполнения упражнения",
    "name": "1",
    "folder": "2",
    "chapter": "5.6"
    },     
    "Документация React: https://react.dev/reference/react/useState"
  ],
  "final_conclusion": [
    "Вы освоили особенности работы хука useState в React изучив что установка предыдущего значения состояния не приводит к перерендингу компонента."
  ]
}