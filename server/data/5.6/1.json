{
  "title": "Работа с состоянием в React-компоненте с помощью хука useState",
  "goals": [
    "Практическое освоение использования хука useState в React.",
    "Закрепление навыков работы с состоянием и обработчиками событий."
  ],
  "training_topic": "Использование хука useState для управления состоянием компонента в React.",
  "required_resources": [
    "Редактор кода (VS Code, Sublime Text и т.д.).",
    "React-проект (готовое приложение или созданный вручную)."
  ],
  "instructions": [
    "Введение в упражнение:",
    "- Цель упражнения — научиться использовать хук useState для управления состоянием компонента в React и наблюдать за процессом перерендинга.",
    "",
    "Шаг 1. Подготовьте рабочую среду:",
    "- Откройте редактор кода и создайте или откройте существующую папку с React-проектом.",
    "",
    "Шаг 2. Создание компонента App.js с использованием хука useState:",
    "- Создайте файл `App.js` и поместите в него следующий код компонента:",
    {
      "type": "code",
      "title": "Компонент App.js",
      "code": "import React, { useState } from 'react'; const App = () => { const [count, setCount] = useState(0); const handleClick = () => { setCount(count + 1); }; return ( <div> <h1>Количество перерендеров: {count}</h1> <button onClick={handleClick}>Увеличить счётчик</button> </div> ); }; export default App;"
    },
    "",
    "Шаг 3. Изучение кода компонента:",
    "- В компоненте `App.js` создана переменная состояния `count` с помощью хука `useState` и установлена её начальная величина равная нулю.",
    "- Функция `handleClick` увеличивает значение счётчика на единицу при каждом вызове.",
    "- Обработчик события `onClick` назначен на кнопку при нажатии которой вызывается функция `handleClick` что приводит к изменению состояния и последующему перерендингу компонента.",
    "",
    "Шаг 4. Запуск и просмотр результата:",
    "- Запустите проект с помощью команды `npm start` или аналогичной.",
    "- Откройте браузер и нажмите на кнопку «Увеличить счётчик». Наблюдайте как увеличивается значение счётчика и происходит перерендинг компонента.",
    "",
    "Заключение:",
    "- Вы освоили использование хука useState для управления состоянием компонента в React и наблюдали за процессом перерендинга."
  ],
  "reflection_questions": [
    "Как хук useState помогает управлять состоянием компонента в React?",
    "Какие правила следует соблюдать при назначении обработчиков событий в React?",
    "Какие преимущества даёт разделение состояния и обработчиков событий в React-компонентах?"
  ],
  "additional_materials": [
    {
    "type": "link",
    "title": "Файлы для выполнения упражнения",
    "name": "1",
    "folder": "1",
    "chapter": "5.6"
    },     
    "Документация React: https://react.dev/reference/react/useState"
  ],
  "final_conclusion": [
    "Вы освоили использование хука useState для управления состоянием компонента в React научились назначать обработчики событий и наблюдали за процессом перерендинга."
  ]
}