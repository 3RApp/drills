{
  "title": "Упражнение по созданию селектора и экшен криэйтера",
  "goals": [
    "Практическое освоение создания селекторов и экшен-креаторов в Redux.",
    "Закрепление навыков работы с библиотекой Redux и управлением состоянием приложения."
  ],
  "training_topic": "Создание и использование селекторов и экшен-креаторов в Redux.",
  "required_resources": [
    "Файлы: package.json, webpack.config.js, index.html, empty.js (предоставляются преподавателем)."
  ],
  "instructions": [
    "Введение в упражнение:",
    "- Цель упражнения — научиться создавать селекторы и экшен-креаторы для работы с состоянием приложения в Redux.",
    "",
    "Шаг 1. Подготовьте рабочую среду:",
    "- Скачайте и распакуйте архив с файлами, предоставленными преподавателем.",
    "",
    "Шаг 2. Настройка окружения:",
    "- Откройте терминал и перейдите в директорию с проектом.",
    "- Установите зависимости, выполнив команду:",
    {
      "type": "code",
      "title": "Установка зависимостей",
      "code": "npm install"
    },
    "",
    "Шаг 3. Создание селектора и экшен-креатора:",
    "- Откройте файл `drill.js`.",
    "- Скопируйте и вставьте следующий пример кода в файл `drill.js`, поэтапно заполняя его:",
    {
      "type": "code",
      "title": "Импорт и объявление начальных данных",
      "code": "import { createStore } from 'redux'; const initialState = { tasks: ['Написать статью', 'Сделать отчёт']; }"
    },
    "",
    "- Добавьте в файл реализацию экшен-креатора и селектора:",
    {
      "type": "code",
      "title": "Экшен-креатор и селектор",
      "code": "const ADD_TASK = 'ADD_TASK'; const createAddTask = (task) => ({ type: ADD_TASK, payload: task }); const selectAllTasks = (state) => state.tasks;"
    },
    "",
    "- Создайте редюсер и стор, вызывая функцию `createStore`, и получите ссылки на основные методы:",
    {
      "type": "code",
      "title": "Редюсер и стор",
      "code": "const reducer = (state, action) => { const { type, payload } = action; if (type === ADD_TASK) { return { tasks: [...state.tasks, payload] }; } return state; }; const { getState, subscribe, dispatch } = createStore(reducer, initialState);"
    },
    "",
    "- Подпишитесь на изменения состояния и реализуйте функцию логирования изменений:",
    {
      "type": "code",
      "title": "Подписка на изменения и функция логирования",
      "code": "const logState = (str) => console.log('state', getState(), str); subscribe(() => logState(`через dispatch`));"
    },
    "",
    "- Произведите отправку экшенов и протестируйте работу селектора:",
    {
      "type": "code",
      "title": "Отправка экшенов и тест селектора",
      "code": "dispatch(createAddTask('Посмотреть фильм')); dispatch(createAddTask('Почитать книгу')); console.log(selectAllTasks(getState()));"
    },
    "",
    "Шаг 4. Сборка и запуск приложения:",
    "- Запустите сборку проекта с помощью команды:",
    {
      "type": "code",
      "title": "Сборка проекта",
      "code": "npm run build"
    },
    "",
    "- Откройте файл `index.html` в браузере и изучите вывод в консоли.",
    "",
    "Заключение:",
    "- Вы создали селектор и экшен-креатор для приложения, используя библиотеку Redux, и познакомились с механизмом работы диспетчера и редюсера."
  ],
  "reflection_questions": [
    "Какие задачи решают селекторы и экшен-креаторы в Redux?",
    "Как организована работа с экшенами и редюсерами в Redux?",
    "Какие преимущества даёт использование экшен-креаторов перед обычными объектами-экшенами?"
  ],
  "additional_materials": [
    {
    "type": "link",
    "title": "Файлы для выполнения упражнения",
    "name": "1",
    "folder": "3",
    "chapter": "4.4"
    },
    "Документация Redux: https://redux.js.org/introduction/getting-started"
  ],
  "final_conclusion": [
    "Вы освоили создание селекторов и экшен-креаторов в Redux, пополнив свои знания и навыки в области управления состоянием приложений."
  ]
}