{
  "title": "Применение процедуры проектирования 3RApp-приложения",
  "goals": [
    "Практическое освоение процедуры проектирования 3RApp-приложения.",
    "Закрепление понимания шагов проектирования и их последовательности."
  ],
  "training_topic": "Процедура проектирования 3RApp-приложения.",
  "required_resources": [
    "Задание на разработку от заказчика.",
    "Дизайн для мероприятия, где продвигается услуга."
  ],
  "instructions": [
    "Введение в упражнение:",
    "- Цель упражнения — научиться применять процедуру проектирования 3RApp-приложения, чтобы эффективно разрабатывать фронтенд-приложения.",
    "",
    "Шаг 1. Изучение требований и дизайна:",
    "- Изучите задание на разработку от заказчика и дизайн для мероприятия, чтобы понять цель приложения и проблемы, которые оно решает.",
    "Важное замечание! Дизайн, который в файле pdf, сделан схематически и нужен лишь как основа и на самом деле не является дизайном. Это больше напоминает промежуточный продукт между вайрфреймом и мокапом. Но даже на основе такого документа мы сможем провести упражнение.",
    "- Мы сосредоточимся только на самых основных требованиях для проектирования и реализации.",
    "- Скачайте архивный файл в дополнительных материалах.",
    "- Откройте шаг 1 процедуры проектирования в книге \"Разработка фронтенд-приложений\" на странице .",
    "- Наш граф теперь выглядит таким образом. ",
    "",
    "Шаг 2. Определение компонентов с ролью «Страница»:",
    "- Определите основные разделы веб-приложения и создайте граф страниц и список компонентов с ролью «Страница».",
    "- Глядя на задание и дизайн мы видим, что это одна страница одностраничного приложения (SPA - Single Page Application). Ну что же, наносим вершину на чистый лист и назначаем ей имя. В данном случае мы можем дать имя не в соответствии со спецификой раздела, а дать техническое имя LandingPage.",
    "На всякий случай! Если вам нужно ещё раз ознакомиться с тем, как именовать компоненты, прочтите страницы 374 - 375 книги.",
    {
      "type": "image",
      "title": "Граф страниц лендинга \"Мероприятие\" с компонентами с ролью \"Страница\"",
      "name": "1",
      "folder": "1",
      "format": "png",
      "chapter": "8.5"
    },
    "- Заносим название компонента страницы в таблицу.",
    "-----------------------------",
    "|    LandingPage",
    "-----------------------------",
    "- А теперь дополнительный вопрос: -\"Какое бы имя вы присвоили компоненту с ролью страница в данном случае?\"",
    "- Другой вопрос: -\"Считаете ли вы излишним заполнение таблицы названиями компонентов?\"",
    "",
    "Шаг 3. Выделение UI-компонентов из дизайна:",
    "- Изучите дизайн и выделите UI-компоненты, которые будут использоваться в приложении. Дополните граф компонентов приложения компонентами с ролями «Лэйаут», «Бизнес-компонент» и «Простой конечный компонент». Добавьте компонент с ролью «Провайдер».",
    "- Лэйаут.",
    "На всякий случай! Если вам нужно ещё раз ознакомиться с тем, как выделять из дизайна компоненты с конкретной ролью, прочтите стр. 376 книги.",
    "На всякий случай! Если вам нужно посмотреть пример выделения лэйаута, прочтите страницы. 376 - 378 книги.",
    "- Для текущего приложения лэйаут является частным случаем. У нас всего одна страница и мы не можем посмотреть другие страницы, чтобы выделить общие компоненты. Но у нас есть на странице компоненты, которые, при наличии многих страниц выделяют в лэйаут. Это такие компоненты, как Header, Footer, Nagigation.",
    "- Что же, пусть будет так. Мы выделяем компонент лэйаута и хэдер, футер и навигация будут его дочерними компонентами. Нужно опредилить, лэйаут будет родителем страницы или страница будет родителем лэйаута. ",
    "- Этот вопрос задан специально. Ответ на него прост. Лэйаут будет родителем страницы. Но есть другой вопрос, который нужно задать, но для начала и для наглядности, нанесём выделенные компоненты на граф. ",
    "На всякий случай! Приложение простое и поэтому мы можем сразу отображать детально все компоненты, которые планируем создавать в коде.",
    {
      "type": "image",
      "title": "Граф страниц лендинга \"Мероприятие\" с компонентами с ролью \"Лэйаут\"",
      "name": "2",
      "folder": "1",
      "format": "png",
      "chapter": "8.5"
    },
    "- Лэйаут в таблицу с компонентами не вносим.",
    "- А теперь дополнительный вопрос: -\"Если бы меню навигации было расположено под блоком с фразой \"С этой услугой задачи решаются на 50% быстрее\" перед блоком \"Про мероприятие\", кто должен был бы быть его родителем?\"",
    "- Бизнес-компонент.",
    "На всякий случай! Если вам нужно посмотреть пример выделения бизнес-компонента, прочтите страницы. 378 - 380 книги.",
    "- Бизнес-компонент - это основные действующие компоненты, то, ради чего пользователь использует приложение. В случае с лендингом можно дополнить, что те компоненты с помощью которых мы информируем пользователя о каждой стороне, описывающей мероприятие или рассказывающее про услугу.",
    "- Глядя на дизайн и мысленно выбрасывая уже выделенные визуальные компоненты (составляющие Layout) мы видим, что у нас есть разделы: 1) Призыв к действию с фразой про 50%, 2) Про мероприятие, 3) Про услугу, 4) Подтверждения госорганов о соответствии, 5) Отзывы, 6) Регистрация на мероприятие и 7) О нас.",
    "- Все эти компоненты направлены на пользователя. Правда только один из них подразумевает действие - это регистрация на мероприятие.",
    "- Дадим названия бизнес-компонентам и нанесём их на граф.",
    {
      "type": "image",
      "title": "Граф страниц лендинга \"Мероприятие\" с компонентами с ролью \"Бизнес-компонент\"",
      "name": "3",
      "folder": "1",
      "format": "png",
      "chapter": "8.5"
    },
    "- Заносим названия бизнес-компонентов в таблицу, как дочерние для страницы LandingPage.",
    "-----------------------------",
    "|    LandingPage",
    "-----------------------------",
    "|    CallToAction",
    "|    BusinessEvent",
    "|    Service",
    "|    Confirmation",
    "|    Feedback",
    "|    Registration",
    "|    AboutCompany",
    "-----------------------------",
    "- Заполнение таблицы на этом заканчивается.",
    "- А теперь дополнительное действие. Переименуйте бизнес-компоненты исходя из своего понимания, как они должны быть названы. Дайте новое имя каждому компоненту и занесите их в таблицу.",
    " - После этого изобразите на бумаге граф лендинга с новыми названиями и обязательно включите все ранее выделенные из дизайна компоненты. После этого вернитесь к этому упражнению.",
    "- Простой конечный компонент.",
    "- Отличается простой конечный компонент тем, что он не имеет дочерних компонентов и является единичным элементом интерфейса. Также, это самый переиспользуемый компонент в приложении. Таковыми в лендинге можно выделить: 1) Заголовок, 2) Текст, 3) Кнопка.",
    "- Нанесём на граф компоненты с ролью \"Простой конечный компонент\".",
    {
      "type": "image",
      "title": "Граф страниц лендинга \"Мероприятие\" с компонентами с ролью \"Простой конечный компонент\"",
      "name": "4",
      "folder": "1",
      "format": "png",
      "chapter": "8.5"
    },
    "- А теперь дополнительное действие. На листе бумаги, в своём графе, где вы дали бизнес-компонентам новые имена, нанесите три вершины для простых конечных компонентов и нанесите связи этих компонентов (вершин на графе) в граф лендинга.",
    "- Очевидно ли для вас, что созданные связи будут соответствовать импорту компонента в коде React-приложения и его использованию в выводе?",
    "",
    "- Провайдер.",
    "- На данном шаге, шаге 3 нам нужно также выделить компонент с ролью  \"Провайдер\".",
    "На всякий случай! Если вам нужно посмотреть пример добавления провайдера, прочтите страницы. 381 - 382 книги.",
    "- Поскольку у нас будет использоваться Reactrouter, то мы или должны добавить компонент с ролью \"Провайдер\" или один из компонентов для роутинга. В нашем случае мы добавим компонент BrowserRouter и сокращенно назовём его Router. Правда такой подход маршрутизации подразумевает использование других компонентов из Reactrouter типа Routes и Route, но мы опускаем эти детали как несущественные для проектирования.",
    {
      "type": "image",
      "title": "Граф страниц лендинга \"Мероприятие\" с одним компонентом с ролью \"Провайдер\"",
      "name": "5",
      "folder": "1",
      "format": "png",
      "chapter": "8.5"
    },
    "",
    "- А теперь дополнительный вопрос! В задании на разработку не сказано ничего о сторонних подключаемых системах. Но представьте, что такой запрос был. Например, заказчик просит подключить к сайту готовое решение Jivo. Его API расположено здесь (https://www.jivo.ru/docs/widget/). Нужно ли в этом случае его отображать на графе?",
    "",
    "Шаг 4. Задание глобального состояния приложения:",
    "- Определите, какие данные будут храниться в глобальном состоянии приложения, и дополните граф компонентов приложением компонентом с ролью «Провайдер» для управления состоянием.",    
    "На всякий случай! Если вам нужно посмотреть пример задания глобального состояния приложения, прочтите страницы. 382 - 385 книги.",
    "- Шаг 4 предписывает определить глобальное состояние и если приложение его должно содержать, то занести свойства глобального состояния в таблицу.",
    "- В случае с лендингом те данные, что пользователь может вводить в форму могут храниться в состоянии компонента. Но для учебных целей, мы будем хранить эти данные в глобальном состоянии.",
    "- По этой причине зададим состояние и выпишем его в таблицу. Пользовать вводит ФИО и номер телефона. Зададим состояние в таблице:",
    "-----------------------------",
    "|    visitor: { fullName: string, phone: string } ",
    "-----------------------------",
    "- Так как мы использовали глобальное состояние, то для использования Reduxtoolkit необходимо добавить провайдер. Нанесём его на граф.",
    {
      "type": "image",
      "title": "Граф страниц лендинга \"Мероприятие\" с одним компонентом с ролью \"Провайдер\"",
      "name": "6",
      "folder": "1",
      "format": "png",
      "chapter": "8.5"
    },    
    "- А теперь дополнительное действие! 1) Представьте, что вам нужно хранить ФИО в глобальном состоянии не одной строкой, а раздельно. Для номера телефона допустим вы использовали готовое решение, где пользователь выбирает отдельно код страны, первые три цифры и номер. Создайте новые свойства стора для раздельных ФИО, кода страны, кода оператора и номера телефона и запишите его себе отдельно. 2) На графе, который создали вы на бумаге, нанесите провайдер.",
    "",
    "Шаг 5. Определение взаимодействия с внешними системами:",
    "- Определите, какие компоненты будут взаимодействовать с внешними системами, и укажите, какие данные будут передаваться и получаться.",
    "На всякий случай! Если вам нужно посмотреть пример как и что определять на то, с какими внешними системами какие компоненты взаимодействует, прочтите страницы. 385 - 386 книги.",
    "- Допустим нас есть эндпоинт, на который отправляется мутирующий POST-запрос и его путь \"/api/v1/participant\". Для целей упражнения нам достаточно просто отправлять данные на этот эндпоинт. Запрос обработан не будет сервером, но мы убедимся, что данные передаются. Поэтому мы назначим эндпоинт компоненту и занесем его в таблицу маппинга эндпоинтов на компоненты.",
    "- Очевидно, что с эндпоинтом будет взаимодействовать компонент Registration. Поэтому мы занесем его в таблицу маппинга эндпоинтов на компоненты:",
    "---------------------------------------------",
    "|    /api/v1/participant | Registration",
    "---------------------------------------------",
    "- А теперь дополнительное действие! Представьте, что вам нужно получать код страны из специального справочника, который маппит код страны на её название. Для этого вам нужно будет отправить GET-запрос на эндпоинт \"/api/v1/country\". Запишите себе эндпоинт и компонент, с которым он будет взаимодействовать. Нужно сперва определить компонент. Возможно его нет на графе.",
    "",
    "Шаг 6. Определение маршрутов для компонентов:",
    "- Определите, по какому пути в URL какой компонент будет рендериться, и создайте карту маршрутов для приложения.",
    "На всякий случай! Если вам нужно посмотреть пример как определяется по какому пути в URL какой компонент рендериться, прочтите страницы. 387 - 389 книги.",
    "- Однако в книге рассмотрены случаи для SPA со многими разделами, тогда как у нас всего один. ",
    "- Зададим пути в URL для лендинга в таблице:",
    "---------------------------------------------",
    "|    #event | BusinessEvent",
    "|    #service | Service",
    "|    #confirmation | Confirmation",
    "|    #feedback | Feedback",
    "|    #registration | Registration",
    "|    #about | AboutCompany",
    "---------------------------------------------",
    "",
    "Все артефакты (то, что создано человеком, а не природой) проектирования получены:",
    "1. Граф компонентов приложения (шаги 2, 3 и 4).",
    "2. Таблица со свойствами, которые будут храниться в глобальном состоянии приложения (шаг 4).",
    "3. Таблица маппинга эндпоинтов на компоненты (шаг 5).",
    "4. Таблица с маршрутами для компонентов приложения (шаг 6).",
        "",
    "Заключение:",
    "- Вы освоили процедуру проектирования 3RApp-приложения и научились применять её для разработки фронтенд-приложений. Это позволит вам создавать качественные и функциональные приложения, соответствующие требованиям заказчика."
  ],
  "reflection_questions": [
    "Глядя на изображение с полным графом, есть ли смысл, по вашему мнению, использовать процедуру проектирования 3RApp-приложения?",
    "Если вы уже создавали лендинги, вспомните, как это было. Ответьте себе на вопрос: -\"Поможет ли вам процедура проектирования 3RApp-приложения именно для лендингов?\"",
    "Если ваше приложение будет состоять из нескольких страниц (например интернет-магазин), как вы думаете, чем именно вам могла бы помочь процедура проектирования и разработки 3RApp?",
    "Какие шаги процедуры проектирования 3RApp-приложения наиболее важны для создания качественного приложения?",
    "Какие преимущества и недостатки у процедуры проектирования 3RApp-приложения по сравнению с другими подходами?"
  ],
  "additional_materials": [
    {
        "type": "link",
        "title": "Архивный файл для выполнения упражнения",
        "name": "1",
        "folder": "1",
        "chapter": "8.5"
    },
    "Задание на разработку от заказчика.",
    "Дизайн для мероприятия, где продвигается услуга.",
    "Книга \"Разработка фронтенд-приложений\"."
  ],
  "final_conclusion": [
    "Вы освоили процедуру проектирования 3RApp-приложения, что позволит вам эффективно разрабатывать фронтенд-приложения, соответствующие требованиям заказчика и обеспечивающие качественное пользовательское взаимодействие."
  ]
}