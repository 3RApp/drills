{
  "title": "Создание стора с использованием configureStore (@reduxjs/toolkit)",
  "goals": [
    "Практическое освоение функции configureStore из библиотеки @reduxjs/toolkit.",
    "Закрепление навыков работы с редюсерами и стором в Redux."
  ],
  "training_topic": "Управление состоянием приложения с помощью библиотеки @reduxjs/toolkit.",
  "required_resources": [
    "Файлы: package.json, webpack.config.js, index.html, drill.js (предоставляются преподавателем)."
  ],
  "instructions": [
    "Введение в упражнение:",
    "- Цель упражнения — научиться создавать стор с использованием функции configureStore из библиотеки @reduxjs/toolkit.",
    "",
    "Шаг 1. Подготовьте рабочую среду:",
    "- Скачайте и распакуйте архив с файлами, предоставленными преподавателем.",
    "",
    "Шаг 2. Настройка окружения:",
    "- Откройте терминал и перейдите в директорию с проектом.",
    "- Установите зависимости, выполнив команду:",
    {
      "type": "code",
      "title": "Установка зависимостей",
      "code": "npm install"
    },
    "",
    "Шаг 3. Создание стора и редюсера:",
    "- Откройте файл `drill.js` и вставьте следующий пример кода, пошагово заполняя недостающие части под руководством преподавателя:",
    {
      "type": "code",
      "title": "Импорт и объявление начальных данных",
      "code": "import { configureStore } from '@reduxjs/toolkit'; const TOGGLE_LANGUAGE = 'TOGGLE_LANGUAGE';"
    },
    "",
    "- Добавьте в файл реализацию редюсера, отвечающего за переключение языка интерфейса:",
    {
      "type": "code",
      "title": "Редюсер переключения языка",
      "code": "const languageReducer = (state = 'ru', action) => { if (action.type === TOGGLE_LANGUAGE) { return state === 'ru' ? 'en' : 'ru'; } return state; };"
    },
    "",
    "- Создайте экшн-креатор для переключения языка:",
    {
      "type": "code",
      "title": "Экшн-креатор для переключения языка",
      "code": "const toggleLanguage = () => ({ type: TOGGLE_LANGUAGE });"
    },
    "",
    "- Создайте корневой редюсер и настройте стор с функцией configureStore:",
    {
      "type": "code",
      "title": "Настройка стора с configureStore",
      "code": "const rootReducer = (state = {}, action) => ({ lang: languageReducer(state.lang, action) }); const store = configureStore({ reducer: rootReducer, preloadedState: { lang: 'ru' } });"
    },
    "",
    "- Подпишитесь на изменения состояния и реализуем вывод в консоль:",
    {
      "type": "code",
      "title": "Подписка на изменения состояния",
      "code": "store.subscribe(() => console.log(store.getState()));"
    },
    "",
    "- Реализуйте логику UI-компонентов для переключения языка:",
    {
      "type": "code",
      "title": "Логика UI-компонентов",
      "code": "const button = document.getElementById('language-switch'); button.addEventListener('click', () => { store.dispatch(toggleLanguage()); });"
    },
    "",
    "Шаг 4. Сборка и запуск приложения:",
    "- Запустите сборку проекта с помощью команды:",
    {
      "type": "code",
      "title": "Сборка проекта",
      "code": "npm run build"
    },
    "",
    "- Откройте файл `index.html` в браузере и изучите вывод в консоли.",
    "",
    "Заключение:",
    "- Вы создали стор с использованием функции configureStore из библиотеки @reduxjs/toolkit, освоив основные аспекты работы с редюсерами и стором."
  ],
  "reflection_questions": [
    "Какие преимущества даёт использование configureStore перед старым методом createStore?",
    "Как организовано объединение редюсеров в корень с помощью configureStore?",
    "Какие возможности предоставляет библиотека @reduxjs/toolkit для оптимизации работы с Redux?"
  ],
  "additional_materials": [
    {
    "type": "link",
    "title": "Файлы для выполнения упражнения",
    "name": "1",
    "folder": "1",
    "chapter": "4.8"
    },
    "Документация @reduxjs/toolkit: https://redux-toolkit.js.org/api/configureStore",
    "Tutorial по работе с Redux Toolkit: https://redux.js.org/tutorials/essentials/part-2-app-structure"
  ],
  "final_conclusion": [
    "Вы освоили создание стора с использованием функции configureStore из библиотеки @reduxjs/toolkit, приобретя важный навык для работы с Redux."
  ]
}